{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/eliothyenne/Daneo/app/screens/HomeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { COLORS } from \"../config/colors.js\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      vocabListFound = _useState2[0],\n      setVocabListFound = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      vocabListLength = _useState4[0],\n      setVocabListLength = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      numNewWords = _useState6[0],\n      setNumNewWords = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      numReviews = _useState8[0],\n      setNumReviews = _useState8[1];\n\n  React.useEffect(function () {\n    var unsubscribe = navigation.addListener(\"focus\", function () {\n      setVocabListFound(false);\n    });\n    return unsubscribe;\n  }, [navigation]);\n\n  var getCounters = function getCounters() {\n    var currentVocabList, tempVocabList, newWordsCounter, reviewsCounter, i;\n    return _regeneratorRuntime.async(function getCounters$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@vocabList\"));\n\n          case 2:\n            currentVocabList = _context.sent;\n\n            if (!currentVocabList) {\n              setVocabListLength(0);\n            } else {\n              tempVocabList = JSON.parse(currentVocabList);\n              setVocabListLength(tempVocabList.length);\n              newWordsCounter = 0;\n              reviewsCounter = 0;\n\n              for (i = 0; i < tempVocabList.length; i++) {\n                if (tempVocabList[i].level == \"Unseen\") {\n                  newWordsCounter++;\n                } else {\n                  reviewsCounter++;\n                }\n              }\n\n              setNumReviews(reviewsCounter);\n              setNumNewWords(newWordsCounter);\n            }\n\n            setVocabListFound(true);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!vocabListFound) {\n    getCounters();\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      top: Platform.OS === \"ios\" ? 50 : 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return navigation.navigate(\"WordList\", {\n        title: \"WORD LIST\"\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.button, {\n      backgroundColor: COLORS.pastel_red\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"WORDS\" + \" (\" + vocabListLength + \")\")), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return navigation.navigate(\"LearnWord\", {\n        title: \"LEARN WORD\"\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.button, {\n      backgroundColor: COLORS.pastel_blue\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"LEARN\" + \" (\" + numNewWords + \")\")), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return console.log(\"REVIEW\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.button, {\n      backgroundColor: COLORS.pastel_yellow\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"REVIEW\" + \" (\" + numReviews + \")\")), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return navigation.navigate(\"AddWord\", {\n        title: \"ADD WORD\"\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.button, {\n      backgroundColor: COLORS.pastel_green\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"ADD\"))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.pastel_purple,\n    alignItems: \"center\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight + 40 : 0\n  },\n  button: _objectSpread({\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    marginBottom: 25,\n    borderRadius: 25,\n    fontFamily: \"Roboto-Black\",\n    fontSize: 25,\n    color: \"white\",\n    width: 300,\n    height: 100,\n    overflow: \"hidden\"\n  }, Platform.select({\n    ios: {\n      lineHeight: 100\n    },\n    android: {}\n  }))\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/eliothyenne/Daneo/app/screens/HomeScreen.js"],"names":["React","useState","COLORS","ScrollView","AsyncStorage","HomeScreen","navigation","vocabListFound","setVocabListFound","vocabListLength","setVocabListLength","numNewWords","setNumNewWords","numReviews","setNumReviews","useEffect","unsubscribe","addListener","getCounters","getItem","currentVocabList","tempVocabList","JSON","parse","length","newWordsCounter","reviewsCounter","i","level","styles","container","top","Platform","OS","navigate","title","button","backgroundColor","pastel_red","pastel_blue","console","log","pastel_yellow","pastel_green","StyleSheet","create","flex","pastel_purple","alignItems","paddingTop","StatusBar","currentHeight","textAlign","textAlignVertical","marginBottom","borderRadius","fontFamily","fontSize","color","width","height","overflow","select","ios","lineHeight","android"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Text, SafeAreaView, TouchableWithoutFeedback, Platform, StatusBar, View } from \"react-native\";\nimport { COLORS } from \"../config/colors.js\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst HomeScreen = ({ navigation }) => {\n  const [vocabListFound, setVocabListFound] = useState(false);\n  const [vocabListLength, setVocabListLength] = useState(0);\n  const [numNewWords, setNumNewWords] = useState(0);\n  const [numReviews, setNumReviews] = useState(0);\n\n  //Re-render when going to this screen through navigation to update states\n  React.useEffect(() => {\n    const unsubscribe = navigation.addListener(\"focus\", () => {\n      setVocabListFound(false);\n    });\n    return unsubscribe;\n  }, [navigation]);\n\n  const getCounters = async () => {\n    const currentVocabList = await AsyncStorage.getItem(\"@vocabList\");\n\n    if (!currentVocabList) {\n      setVocabListLength(0);\n    } else {\n      const tempVocabList = JSON.parse(currentVocabList);\n      setVocabListLength(tempVocabList.length);\n      var newWordsCounter = 0;\n      var reviewsCounter = 0;\n      for (var i = 0; i < tempVocabList.length; i++) {\n        if (tempVocabList[i].level == \"Unseen\") {\n          newWordsCounter++;\n        } else {\n          reviewsCounter++;\n        }\n      }\n      setNumReviews(reviewsCounter);\n      setNumNewWords(newWordsCounter);\n    }\n    setVocabListFound(true);\n  };\n\n  if (!vocabListFound) {\n    getCounters();\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        <View>\n          <View style={{ top: Platform.OS === \"ios\" ? 50 : 0 }}>\n            <TouchableWithoutFeedback onPress={() => navigation.navigate(\"WordList\", { title: \"WORD LIST\" })}>\n              <Text style={[styles.button, { backgroundColor: COLORS.pastel_red }]}>{\"WORDS\" + \" (\" + vocabListLength + \")\"}</Text>\n            </TouchableWithoutFeedback>\n            <TouchableWithoutFeedback onPress={() => navigation.navigate(\"LearnWord\", { title: \"LEARN WORD\" })}>\n              <Text style={[styles.button, { backgroundColor: COLORS.pastel_blue }]}>{\"LEARN\" + \" (\" + numNewWords + \")\"}</Text>\n            </TouchableWithoutFeedback>\n            <TouchableWithoutFeedback onPress={() => console.log(\"REVIEW\")}>\n              <Text style={[styles.button, { backgroundColor: COLORS.pastel_yellow }]}>{\"REVIEW\" + \" (\" + numReviews + \")\"}</Text>\n            </TouchableWithoutFeedback>\n            <TouchableWithoutFeedback onPress={() => navigation.navigate(\"AddWord\", { title: \"ADD WORD\" })}>\n              <Text style={[styles.button, { backgroundColor: COLORS.pastel_green }]}>ADD</Text>\n            </TouchableWithoutFeedback>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.pastel_purple,\n    alignItems: \"center\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight + 40 : 0,\n  },\n  button: {\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    marginBottom: 25,\n    borderRadius: 25,\n    fontFamily: \"Roboto-Black\",\n    fontSize: 25,\n    color: \"white\",\n    width: 300,\n    height: 100,\n    overflow: \"hidden\",\n    ...Platform.select({\n      ios: {\n        lineHeight: 100, // as same as height\n      },\n      android: {},\n    }),\n  },\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}