{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/eliothyenne/Daneo/app/screens/AddWordScreen.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { SearchBar } from \"react-native-elements\";\nimport { COLORS } from \"../config/colors.js\";\nimport WordInfoComponent from \"../components/WordInfoComponent.js\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nvar AddWordScreen = function AddWordScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchInputText = _useState2[0],\n      setSearchInputText = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      wordFound = _useState6[0],\n      setWordFound = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      vocabWord = _useState8[0],\n      setVocabWord = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      translatedWordList = _useState10[0],\n      setTranslatedWordList = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      definitionsList = _useState12[0],\n      setDefinitionsList = _useState12[1];\n\n  var parseString = require(\"react-native-xml2js\").parseString;\n\n  var findItemIndex = function findItemIndex(jsonData) {\n    var foundTranslatedWord = false;\n    var itemIndex = 0;\n\n    if (Array.isArray(jsonData.channel.item)) {\n      while (!foundTranslatedWord) {\n        if (!Array.isArray(jsonData.channel.item[itemIndex].sense)) {\n          if (jsonData.channel.item[itemIndex].sense.translation === undefined) {\n            itemIndex++;\n          } else {\n            foundTranslatedWord = true;\n          }\n        } else {\n          foundTranslatedWord = true;\n        }\n      }\n    }\n\n    return itemIndex;\n  };\n\n  var createWord = function createWord(jsonData) {\n    var newTranslatedWordList = [];\n    var newDefinitionsList = [];\n    var itemIndex = findItemIndex(jsonData);\n\n    if (Array.isArray(jsonData.channel.item)) {\n      setVocabWord(jsonData.channel.item[itemIndex].word._text);\n\n      if (Array.isArray(jsonData.channel.item[itemIndex].sense)) {\n        for (var i = 0; i < jsonData.channel.item[itemIndex].sense.length; i++) {\n          newTranslatedWordList.push(jsonData.channel.item[itemIndex].sense[i].translation.trans_word._cdata);\n          newDefinitionsList.push(jsonData.channel.item[itemIndex].sense[i].translation.trans_dfn._cdata);\n        }\n      } else {\n        newTranslatedWordList.push(jsonData.channel.item[itemIndex].sense.translation.trans_word._cdata);\n        newDefinitionsList.push(jsonData.channel.item[itemIndex].sense.translation.trans_dfn._cdata);\n      }\n    } else {\n      setVocabWord(jsonData.channel.item.word._text);\n\n      if (Array.isArray(jsonData.channel.item.sense)) {\n        for (i = 0; i < jsonData.channel.item.sense.length; i++) {\n          newTranslatedWordList.push(jsonData.channel.item.sense[i].translation.trans_word._cdata);\n          newDefinitionsList.push(jsonData.channel.item.sense[i].translation.trans_dfn._cdata);\n        }\n      } else {\n        newTranslatedWordList.push(jsonData.channel.item.sense.translation.trans_word._cdata);\n        newDefinitionsList.push(jsonData.channel.item.sense.translation.trans_dfn._cdata);\n      }\n    }\n\n    setTranslatedWordList(newTranslatedWordList);\n    setDefinitionsList(newDefinitionsList);\n  };\n\n  var handleSearch = function handleSearch(text) {\n    if (text === \"\") {\n      setWordFound(false);\n    } else {\n      setWordFound(false);\n      setIsLoading(true);\n      var url = \"https://krdict.korean.go.kr/api/search?certkey_no=2546&key=BB8FF875370D0FF767AEA6E2586E62A4&type_search=search&method=WORD_INFO&part=word&sort=dict&translated=y&trans_lang=1&q=\" + text;\n      fetch(url).then(function (response) {\n        return response.text();\n      }).then(function (response) {\n        parseString(response, function (err, res) {\n          var convert = require(\"xml-js\");\n\n          var xml = response;\n          var result = convert.xml2json(xml, {\n            compact: true,\n            spaces: 2\n          });\n          var jsonData = JSON.parse(result);\n\n          if (jsonData.channel.item === undefined) {\n            setWordFound(false);\n          } else {\n            createWord(jsonData);\n            setWordFound(true);\n          }\n\n          setIsLoading(false);\n        });\n      }).catch(function (e) {\n        console.log(\"There was a problem searching for a word: \", e);\n      });\n    }\n  };\n\n  var handleOnClear = function handleOnClear() {\n    if (_this.search != null) {\n      _this.search.focus();\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.searchBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(SearchBar, {\n    ref: function ref(search) {\n      return _this.search = search;\n    },\n    onClear: handleOnClear,\n    round: true,\n    autoFocus: true,\n    searchIcon: {\n      size: 25,\n      color: \"white\",\n      paddingLeft: 10\n    },\n    clearIcon: {\n      size: 20,\n      color: \"white\"\n    },\n    onChangeText: setSearchInputText,\n    onSubmitEditing: function onSubmitEditing(event) {\n      return handleSearch(event.nativeEvent.text);\n    },\n    placeholder: \"Search word..\",\n    placeholderTextColor: \"#e3f3ff\",\n    value: searchInputText,\n    inputContainerStyle: {\n      backgroundColor: COLORS.pastel_blue\n    },\n    leftIconContainerStyle: {\n      backgroundColor: COLORS.pastel_blue\n    },\n    inputStyle: {\n      backgroundColor: COLORS.pastel_blue,\n      fontFamily: \"Roboto-Regular\",\n      fontSize: 21,\n      color: \"white\"\n    },\n    containerStyle: {\n      backgroundColor: COLORS.pastel_purple,\n      justifyContent: \"space-around\",\n      borderTopWidth: 0,\n      borderBottomWidth: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 49\n    }\n  }) : null), React.createElement(View, {\n    style: {\n      top: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, !wordFound && !isLoading ? React.createElement(Text, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 62\n    }\n  }, \"\\xAF\\\\(\\xB0_o)/\\xAF\") : null), React.createElement(ScrollView, {\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, wordFound ? React.createElement(View, {\n    style: styles.wordContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, React.createElement(WordInfoComponent, {\n    vocabWord: vocabWord,\n    translatedWordList: translatedWordList,\n    definitionsList: definitionsList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  })) : null)));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.pastel_purple,\n    alignItems: \"center\",\n    paddingTop: Platform.OS === \"android\" ? 50 : 0\n  },\n  wordContainer: {\n    backgroundColor: COLORS.light_gray,\n    margin: 25,\n    marginTop: 0,\n    padding: 25,\n    borderRadius: 25\n  },\n  loading: {\n    top: 200\n  },\n  searchBar: {\n    width: \"90%\",\n    height: 65,\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 21,\n    marginBottom: 25\n  },\n  error: {\n    height: 65,\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 25,\n    color: \"#e3f3ff\"\n  }\n});\nexport default AddWordScreen;","map":{"version":3,"sources":["/Users/eliothyenne/Daneo/app/screens/AddWordScreen.js"],"names":["React","useState","SearchBar","COLORS","WordInfoComponent","ScrollView","AddWordScreen","route","navigation","searchInputText","setSearchInputText","isLoading","setIsLoading","wordFound","setWordFound","vocabWord","setVocabWord","translatedWordList","setTranslatedWordList","definitionsList","setDefinitionsList","parseString","require","findItemIndex","jsonData","foundTranslatedWord","itemIndex","Array","isArray","channel","item","sense","translation","undefined","createWord","newTranslatedWordList","newDefinitionsList","word","_text","i","length","push","trans_word","_cdata","trans_dfn","handleSearch","text","url","fetch","then","response","err","res","convert","xml","result","xml2json","compact","spaces","JSON","parse","catch","e","console","log","handleOnClear","search","focus","styles","container","searchBar","size","color","paddingLeft","event","nativeEvent","backgroundColor","pastel_blue","fontFamily","fontSize","pastel_purple","justifyContent","borderTopWidth","borderBottomWidth","loading","top","error","width","wordContainer","StyleSheet","create","flex","alignItems","paddingTop","Platform","OS","light_gray","margin","marginTop","padding","borderRadius","height","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, SafeAreaView, Platform, View, ActivityIndicator, Text } from \"react-native\";\nimport { SearchBar } from \"react-native-elements\";\nimport { COLORS } from \"../config/colors.js\";\nimport WordInfoComponent from \"../components/WordInfoComponent.js\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nconst AddWordScreen = ({ route, navigation }) => {\n  const [searchInputText, setSearchInputText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [wordFound, setWordFound] = useState(false);\n  const [vocabWord, setVocabWord] = useState(\"\");\n  const [translatedWordList, setTranslatedWordList] = useState([]);\n  const [definitionsList, setDefinitionsList] = useState([]);\n\n  const parseString = require(\"react-native-xml2js\").parseString;\n\n  //Find word item that contains translated word and translated definition\n  const findItemIndex = (jsonData) => {\n    var foundTranslatedWord = false;\n    var itemIndex = 0;\n\n    if (Array.isArray(jsonData.channel.item)) {\n      while (!foundTranslatedWord) {\n        if (!Array.isArray(jsonData.channel.item[itemIndex].sense)) {\n          if (jsonData.channel.item[itemIndex].sense.translation === undefined) {\n            itemIndex++;\n          } else {\n            foundTranslatedWord = true;\n          }\n        } else {\n          foundTranslatedWord = true;\n        }\n      }\n    }\n    return itemIndex;\n  };\n\n  const createWord = (jsonData) => {\n    var newTranslatedWordList = [];\n    var newDefinitionsList = [];\n    var itemIndex = findItemIndex(jsonData);\n\n    //Set the states using the correct word item\n    if (Array.isArray(jsonData.channel.item)) {\n      setVocabWord(jsonData.channel.item[itemIndex].word._text);\n      if (Array.isArray(jsonData.channel.item[itemIndex].sense)) {\n        for (var i = 0; i < jsonData.channel.item[itemIndex].sense.length; i++) {\n          newTranslatedWordList.push(jsonData.channel.item[itemIndex].sense[i].translation.trans_word._cdata);\n          newDefinitionsList.push(jsonData.channel.item[itemIndex].sense[i].translation.trans_dfn._cdata);\n        }\n      } else {\n        newTranslatedWordList.push(jsonData.channel.item[itemIndex].sense.translation.trans_word._cdata);\n        newDefinitionsList.push(jsonData.channel.item[itemIndex].sense.translation.trans_dfn._cdata);\n      }\n    } else {\n      setVocabWord(jsonData.channel.item.word._text);\n      if (Array.isArray(jsonData.channel.item.sense)) {\n        for (i = 0; i < jsonData.channel.item.sense.length; i++) {\n          newTranslatedWordList.push(jsonData.channel.item.sense[i].translation.trans_word._cdata);\n          newDefinitionsList.push(jsonData.channel.item.sense[i].translation.trans_dfn._cdata);\n        }\n      } else {\n        newTranslatedWordList.push(jsonData.channel.item.sense.translation.trans_word._cdata);\n        newDefinitionsList.push(jsonData.channel.item.sense.translation.trans_dfn._cdata);\n      }\n    }\n    setTranslatedWordList(newTranslatedWordList);\n    setDefinitionsList(newDefinitionsList);\n  };\n\n  const handleSearch = (text) => {\n    if (text === \"\") {\n      setWordFound(false);\n    } else {\n      setWordFound(false);\n      setIsLoading(true);\n      var url =\n        \"https://krdict.korean.go.kr/api/search?certkey_no=2546&key=BB8FF875370D0FF767AEA6E2586E62A4&type_search=search&method=WORD_INFO&part=word&sort=dict&translated=y&trans_lang=1&q=\" +\n        text;\n      fetch(url)\n        .then((response) => response.text())\n        .then((response) => {\n          parseString(response, function (err, res) {\n            var convert = require(\"xml-js\");\n            var xml = response;\n            var result = convert.xml2json(xml, { compact: true, spaces: 2 });\n            var jsonData = JSON.parse(result);\n\n            if (jsonData.channel.item === undefined) {\n              setWordFound(false);\n            } else {\n              createWord(jsonData);\n              setWordFound(true);\n            }\n            setIsLoading(false);\n          });\n        })\n        .catch((e) => {\n          console.log(\"There was a problem searching for a word: \", e);\n        });\n    }\n  };\n\n  const handleOnClear = () => {\n    if (this.search != null) {\n      this.search.focus();\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.searchBar}>\n        <SearchBar\n          ref={(search) => (this.search = search)}\n          onClear={handleOnClear}\n          round\n          autoFocus\n          searchIcon={{ size: 25, color: \"white\", paddingLeft: 10 }}\n          clearIcon={{ size: 20, color: \"white\" }}\n          onChangeText={setSearchInputText}\n          onSubmitEditing={(event) => handleSearch(event.nativeEvent.text)}\n          placeholder=\"Search word..\"\n          placeholderTextColor=\"#e3f3ff\"\n          value={searchInputText}\n          inputContainerStyle={{ backgroundColor: COLORS.pastel_blue }}\n          leftIconContainerStyle={{ backgroundColor: COLORS.pastel_blue }}\n          inputStyle={{\n            backgroundColor: COLORS.pastel_blue,\n            fontFamily: \"Roboto-Regular\",\n            fontSize: 21,\n            color: \"white\",\n          }}\n          containerStyle={{\n            backgroundColor: COLORS.pastel_purple,\n            justifyContent: \"space-around\",\n            borderTopWidth: 0,\n            borderBottomWidth: 0,\n          }}\n        />\n      </View>\n      <View style={styles.loading}>{isLoading ? <ActivityIndicator size=\"large\" color=\"white\" /> : null}</View>\n      <View style={{ top: 200 }}>{!wordFound && !isLoading ? <Text style={styles.error}>¯\\(°_o)/¯</Text> : null}</View>\n      <ScrollView style={{ width: \"100%\" }}>\n        <View>\n          {wordFound ? (\n            <View style={styles.wordContainer}>\n              <WordInfoComponent vocabWord={vocabWord} translatedWordList={translatedWordList} definitionsList={definitionsList}></WordInfoComponent>\n            </View>\n          ) : null}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.pastel_purple,\n    alignItems: \"center\",\n    paddingTop: Platform.OS === \"android\" ? 50 : 0,\n  },\n  wordContainer: {\n    backgroundColor: COLORS.light_gray,\n    margin: 25,\n    marginTop: 0,\n    padding: 25,\n    borderRadius: 25,\n  },\n  loading: {\n    top: 200,\n  },\n  searchBar: {\n    width: \"90%\",\n    height: 65,\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 21,\n    marginBottom: 25,\n  },\n  error: {\n    height: 65,\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 25,\n    color: \"#e3f3ff\",\n  },\n});\n\nexport default AddWordScreen;\n"]},"metadata":{},"sourceType":"module"}