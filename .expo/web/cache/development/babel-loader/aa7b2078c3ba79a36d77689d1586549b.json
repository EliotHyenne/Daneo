{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/eliothyenne/Daneo/app/screens/LearnWordScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { COLORS } from \"../config/colors.js\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nvar LearnWordScreen = function LearnWordScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      vocabList = _useState2[0],\n      setVocabList = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lessonList = _useState4[0],\n      setLessonList = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lessonListFound = _useState6[0],\n      setLessonListFound = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      noLessons = _useState8[0],\n      setNoLessons = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentWordIndex = _useState10[0],\n      setCurrentWordIndex = _useState10[1];\n\n  var getLessonList = function getLessonList() {\n    var currentVocabList, i;\n    return _regeneratorRuntime.async(function getLessonList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@vocabList\"));\n\n          case 2:\n            currentVocabList = _context.sent;\n\n            if (currentVocabList) {\n              setVocabList(JSON.parse(currentVocabList));\n\n              for (i = 0; i < vocabList.length; i++) {\n                if (vocabList[i].level == \"Unseen\") {\n                  lessonList.push(vocabList[i]);\n                }\n              }\n\n              if (lessonList.length > 0) {\n                setNoLessons(false);\n              }\n            }\n\n            setLessonListFound(true);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!lessonListFound) {\n    getLessonList();\n  }\n\n  var renderSenses = function renderSenses(index) {\n    return lessonList[index].translatedWordList.map(function (data, key) {\n      return React.createElement(View, {\n        key: key,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.translatedWordList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, key + 1, \". \", data), React.createElement(Text, {\n        style: styles.definitionsList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, lessonList[index].definitionsList[key]));\n    });\n  };\n\n  var nextWord = function nextWord() {\n    var tempCounter = currentWordIndex;\n    tempCounter++;\n\n    if (lessonList[tempCounter]) {\n      setCurrentWordIndex(tempCounter);\n    } else {\n      setNoLessons(true);\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, !lessonListFound || noLessons ? React.createElement(Text, {\n    style: [styles.error, {\n      marginTop: 200\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 40\n    }\n  }, \"\\xAF\\\\(\\xB0_o)/\\xAF\") : null, React.createElement(ScrollView, {\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, lessonListFound && !noLessons ? React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.vocabWord,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, lessonList[currentWordIndex].vocabWord), renderSenses(currentWordIndex), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return nextWord();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.nextButton, {\n      backgroundColor: COLORS.light_gray\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"NEXT\"))) : null));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.pastel_purple,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 25,\n    paddingTop: Platform.OS === \"android\" ? 50 : 0\n  },\n  vocabWord: {\n    fontFamily: \"Roboto-Black\",\n    fontSize: 50,\n    color: \"white\",\n    flex: 1,\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  translatedWordList: {\n    fontFamily: \"Roboto-Bold\",\n    fontSize: 20,\n    color: \"white\",\n    marginTop: 15\n  },\n  definitionsList: {\n    fontFamily: \"Roboto-Light\",\n    fontSize: 18,\n    color: \"white\",\n    marginBottom: 15\n  },\n  error: {\n    height: 65,\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 25,\n    color: \"#e3f3ff\"\n  },\n  nextButton: _objectSpread({\n    alignSelf: \"flex-end\",\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    borderRadius: 25,\n    fontFamily: \"Roboto-Black\",\n    fontSize: 25,\n    color: \"white\",\n    width: 125,\n    height: 75,\n    overflow: \"hidden\"\n  }, Platform.select({\n    ios: {\n      lineHeight: 75\n    },\n    android: {}\n  }))\n});\nexport default LearnWordScreen;","map":{"version":3,"sources":["/Users/eliothyenne/Daneo/app/screens/LearnWordScreen.js"],"names":["React","useState","COLORS","AsyncStorage","ScrollView","LearnWordScreen","route","navigation","vocabList","setVocabList","lessonList","setLessonList","lessonListFound","setLessonListFound","noLessons","setNoLessons","currentWordIndex","setCurrentWordIndex","getLessonList","getItem","currentVocabList","JSON","parse","i","length","level","push","renderSenses","index","translatedWordList","map","data","key","styles","definitionsList","nextWord","tempCounter","container","error","marginTop","width","vocabWord","nextButton","backgroundColor","light_gray","StyleSheet","create","flex","pastel_purple","alignItems","justifyContent","padding","paddingTop","Platform","OS","fontFamily","fontSize","color","textAlign","marginBottom","height","alignSelf","textAlignVertical","borderRadius","overflow","select","ios","lineHeight","android"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,SAASC,MAAT;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,UAAT,QAA2B,8BAA3B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACjD,kBAAkCN,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAoCR,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOS,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA8CV,QAAQ,CAAC,KAAD,CAAtD;AAAA;AAAA,MAAOW,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,mBAAkCZ,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOa,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAgDd,QAAQ,CAAC,CAAD,CAAxD;AAAA;AAAA,MAAOe,gBAAP;AAAA,MAAyBC,mBAAzB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACWf,YAAY,CAACgB,OAAb,CAAqB,YAArB,CADX;;AAAA;AACdC,YAAAA,gBADc;;AAGpB,gBAAIA,gBAAJ,EAAsB;AACpBX,cAAAA,YAAY,CAACY,IAAI,CAACC,KAAL,CAAWF,gBAAX,CAAD,CAAZ;;AAEA,mBAASG,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGf,SAAS,CAACgB,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,oBAAIf,SAAS,CAACe,CAAD,CAAT,CAAaE,KAAb,IAAsB,QAA1B,EAAoC;AAClCf,kBAAAA,UAAU,CAACgB,IAAX,CAAgBlB,SAAS,CAACe,CAAD,CAAzB;AACD;AACF;;AACD,kBAAIb,UAAU,CAACc,MAAX,GAAoB,CAAxB,EAA2B;AACzBT,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AACDF,YAAAA,kBAAkB,CAAC,IAAD,CAAlB;;AAfoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAkBA,MAAI,CAACD,eAAL,EAAsB;AACpBM,IAAAA,aAAa;AACd;;AAED,MAAMS,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,WAAOlB,UAAU,CAACkB,KAAD,CAAV,CAAkBC,kBAAlB,CAAqCC,GAArC,CAAyC,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC7D,aACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACJ,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,GAAG,GAAG,CADT,QACcD,IADd,CADF,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCxB,UAAU,CAACkB,KAAD,CAAV,CAAkBM,eAAlB,CAAkCF,GAAlC,CAAtC,CAJF,CADF;AAQD,KATM,CAAP;AAUD,GAXD;;AAaA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIC,WAAW,GAAGpB,gBAAlB;AACAoB,IAAAA,WAAW;;AACX,QAAI1B,UAAU,CAAC0B,WAAD,CAAd,EAA6B;AAC3BnB,MAAAA,mBAAmB,CAACmB,WAAD,CAAnB;AACD,KAFD,MAEO;AACLrB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GARD;;AAUA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEkB,MAAM,CAACI,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACzB,eAAD,IAAoBE,SAApB,GAAgC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACmB,MAAM,CAACK,KAAR,EAAe;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAf,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAhC,GAAoG,IADvG,EAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5B,eAAe,IAAI,CAACE,SAApB,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACQ,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC/B,UAAU,CAACM,gBAAD,CAAV,CAA6ByB,SAA7D,CADF,EAEGd,YAAY,CAACX,gBAAD,CAFf,EAGE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMmB,QAAQ,EAAd;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACF,MAAM,CAACS,UAAR,EAAoB;AAAEC,MAAAA,eAAe,EAAEzC,MAAM,CAAC0C;AAA1B,KAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAHF,CADD,GAQG,IATN,CAFF,CADF;AAgBD,CApED;;AAsEA,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETJ,IAAAA,eAAe,EAAEzC,MAAM,CAAC8C,aAFf;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,OAAO,EAAE,EALA;AAMTC,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,EAA5B,GAAiC;AANpC,GADoB;AAS/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,UAAU,EAAE,cADH;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTC,IAAAA,KAAK,EAAE,OAHE;AAITV,IAAAA,IAAI,EAAE,CAJG;AAKTW,IAAAA,SAAS,EAAE,QALF;AAMTT,IAAAA,UAAU,EAAE,QANH;AAOTC,IAAAA,cAAc,EAAE;AAPP,GAToB;AAkB/BrB,EAAAA,kBAAkB,EAAE;AAClB0B,IAAAA,UAAU,EAAE,aADM;AAElBC,IAAAA,QAAQ,EAAE,EAFQ;AAGlBC,IAAAA,KAAK,EAAE,OAHW;AAIlBlB,IAAAA,SAAS,EAAE;AAJO,GAlBW;AAwB/BL,EAAAA,eAAe,EAAE;AACfqB,IAAAA,UAAU,EAAE,cADG;AAEfC,IAAAA,QAAQ,EAAE,EAFK;AAGfC,IAAAA,KAAK,EAAE,OAHQ;AAIfE,IAAAA,YAAY,EAAE;AAJC,GAxBc;AA8B/BrB,EAAAA,KAAK,EAAE;AACLsB,IAAAA,MAAM,EAAE,EADH;AAELL,IAAAA,UAAU,EAAE,gBAFP;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,KAAK,EAAE;AAJF,GA9BwB;AAoC/Bf,EAAAA,UAAU;AACRmB,IAAAA,SAAS,EAAE,UADH;AAERH,IAAAA,SAAS,EAAE,QAFH;AAGRI,IAAAA,iBAAiB,EAAE,QAHX;AAIRC,IAAAA,YAAY,EAAE,EAJN;AAKRR,IAAAA,UAAU,EAAE,cALJ;AAMRC,IAAAA,QAAQ,EAAE,EANF;AAORC,IAAAA,KAAK,EAAE,OAPC;AAQRjB,IAAAA,KAAK,EAAE,GARC;AASRoB,IAAAA,MAAM,EAAE,EATA;AAURI,IAAAA,QAAQ,EAAE;AAVF,KAWLX,QAAQ,CAACY,MAAT,CAAgB;AACjBC,IAAAA,GAAG,EAAE;AACHC,MAAAA,UAAU,EAAE;AADT,KADY;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAAhB,CAXK;AApCqB,CAAlB,CAAf;AAwDA,eAAe/D,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, SafeAreaView, Platform, View, Text, TouchableWithoutFeedback } from \"react-native\";\nimport { COLORS } from \"../config/colors.js\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nconst LearnWordScreen = ({ route, navigation }) => {\n  const [vocabList, setVocabList] = useState([]);\n  const [lessonList, setLessonList] = useState([]);\n  const [lessonListFound, setLessonListFound] = useState(false);\n  const [noLessons, setNoLessons] = useState(true);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n\n  const getLessonList = async () => {\n    const currentVocabList = await AsyncStorage.getItem(\"@vocabList\");\n\n    if (currentVocabList) {\n      setVocabList(JSON.parse(currentVocabList));\n\n      for (var i = 0; i < vocabList.length; i++) {\n        if (vocabList[i].level == \"Unseen\") {\n          lessonList.push(vocabList[i]);\n        }\n      }\n      if (lessonList.length > 0) {\n        setNoLessons(false);\n      }\n    }\n    setLessonListFound(true);\n  };\n\n  if (!lessonListFound) {\n    getLessonList();\n  }\n\n  const renderSenses = (index) => {\n    return lessonList[index].translatedWordList.map((data, key) => {\n      return (\n        <View key={key}>\n          <Text style={styles.translatedWordList}>\n            {key + 1}. {data}\n          </Text>\n          <Text style={styles.definitionsList}>{lessonList[index].definitionsList[key]}</Text>\n        </View>\n      );\n    });\n  };\n\n  const nextWord = () => {\n    var tempCounter = currentWordIndex;\n    tempCounter++;\n    if (lessonList[tempCounter]) {\n      setCurrentWordIndex(tempCounter);\n    } else {\n      setNoLessons(true);\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {!lessonListFound || noLessons ? <Text style={[styles.error, { marginTop: 200 }]}>¯\\(°_o)/¯</Text> : null}\n      <ScrollView style={{ width: \"100%\" }}>\n        {lessonListFound && !noLessons ? (\n          <View>\n            <Text style={styles.vocabWord}>{lessonList[currentWordIndex].vocabWord}</Text>\n            {renderSenses(currentWordIndex)}\n            <TouchableWithoutFeedback onPress={() => nextWord()}>\n              <Text style={[styles.nextButton, { backgroundColor: COLORS.light_gray }]}>NEXT</Text>\n            </TouchableWithoutFeedback>\n          </View>\n        ) : null}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.pastel_purple,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 25,\n    paddingTop: Platform.OS === \"android\" ? 50 : 0,\n  },\n  vocabWord: {\n    fontFamily: \"Roboto-Black\",\n    fontSize: 50,\n    color: \"white\",\n    flex: 1,\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  translatedWordList: {\n    fontFamily: \"Roboto-Bold\",\n    fontSize: 20,\n    color: \"white\",\n    marginTop: 15,\n  },\n  definitionsList: {\n    fontFamily: \"Roboto-Light\",\n    fontSize: 18,\n    color: \"white\",\n    marginBottom: 15,\n  },\n  error: {\n    height: 65,\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 25,\n    color: \"#e3f3ff\",\n  },\n  nextButton: {\n    alignSelf: \"flex-end\",\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    borderRadius: 25,\n    fontFamily: \"Roboto-Black\",\n    fontSize: 25,\n    color: \"white\",\n    width: 125,\n    height: 75,\n    overflow: \"hidden\",\n    ...Platform.select({\n      ios: {\n        lineHeight: 75, // as same as height\n      },\n      android: {},\n    }),\n  },\n});\n\nexport default LearnWordScreen;\n"]},"metadata":{},"sourceType":"module"}