{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/eliothyenne/Daneo/app/components/WordInfoComponent.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { COLORS } from \"../config/colors\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Toast from \"react-native-root-toast\";\n\nvar WordInfoComponent = function WordInfoComponent(props) {\n  var _useState = useState(-1),\n      _useState2 = _slicedToArray(_useState, 2),\n      wordIndex = _useState2[0],\n      setWordIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      checkedExists = _useState4[0],\n      setCheckedExists = _useState4[1];\n\n  var checkWordExists = function checkWordExists() {\n    var currentVocabList;\n    return _regeneratorRuntime.async(function checkWordExists$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@vocabList\"));\n\n          case 2:\n            currentVocabList = _context.sent;\n\n            if (currentVocabList) {\n              setWordIndex(JSON.parse(currentVocabList).findIndex(function (element) {\n                return element.vocabWord === props.vocabWord;\n              }));\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var confirmDelete = function confirmDelete(index, vocabWord) {\n    Alert.alert(\"Delete\", \"Are you sure you want to delete \" + vocabWord + \" ?\", [{\n      text: \"Yes\",\n      onPress: function onPress() {\n        return deleteVocabWord(index);\n      }\n    }, {\n      text: \"No\"\n    }]);\n  };\n\n  var deleteVocabWord = function deleteVocabWord(index) {\n    var currentVocabList, newVocabList;\n    return _regeneratorRuntime.async(function deleteVocabWord$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            Toast.show(\"Word deleted\", {\n              duration: Toast.durations.SHORT,\n              backgroundColor: \"gray\",\n              shadow: false,\n              opacity: 0.8\n            });\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@vocabList\"));\n\n          case 3:\n            currentVocabList = _context2.sent;\n            newVocabList = JSON.parse(currentVocabList);\n            newVocabList.splice(index, 1);\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@vocabList\", JSON.stringify(newVocabList)).then(function () {\n              setCheckedExists(false);\n              console.log(\"Word deleted and vocab words list updated.\");\n            }).catch(function (e) {\n              console.log(\"There was an error while delete a vocab word from the vocab words list: \", e);\n            }));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addVocabWord = function addVocabWord() {\n    var vocabWordToAdd, currentVocabList, newVocabList, _newVocabList;\n\n    return _regeneratorRuntime.async(function addVocabWord$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            Toast.show(\"Word added\", {\n              duration: Toast.durations.SHORT,\n              backgroundColor: \"gray\",\n              shadow: false,\n              opacity: 0.8\n            });\n            vocabWordToAdd = {\n              vocabWord: props.vocabWord,\n              level: \"Unseen\",\n              nextReview: Date.now(),\n              translatedWordList: props.translatedWordList,\n              definitionsList: props.definitionsList\n            };\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@vocabList\"));\n\n          case 4:\n            currentVocabList = _context3.sent;\n\n            if (currentVocabList) {\n              _context3.next = 12;\n              break;\n            }\n\n            newVocabList = [];\n            newVocabList.push(vocabWordToAdd);\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@vocabList\", JSON.stringify(newVocabList)).then(function () {\n              setCheckedExists(false);\n              console.log(\"Vocab words list created and word added.\");\n            }).catch(function (e) {\n              console.log(\"There was an error while creating the vocab words list: \", e);\n            }));\n\n          case 10:\n            _context3.next = 16;\n            break;\n\n          case 12:\n            _newVocabList = JSON.parse(currentVocabList);\n\n            _newVocabList.push(vocabWordToAdd);\n\n            _context3.next = 16;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@vocabList\", JSON.stringify(_newVocabList)).then(function () {\n              setCheckedExists(false);\n              console.log(\"Word added to vocab words list.\");\n            }).catch(function (e) {\n              console.log(\"There was an error while setting the vocab words list: \", e);\n            }));\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!checkedExists) {\n    checkWordExists();\n    setCheckedExists(true);\n  }\n\n  var renderSenses = function renderSenses() {\n    return props.translatedWordList.map(function (data, key) {\n      return React.createElement(View, {\n        key: key,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.translatedWordList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, key + 1, \". \", data), React.createElement(Text, {\n        style: styles.definitionsList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, props.definitionsList[key]));\n    });\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.vocabWord,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, props.vocabWord), props.level ? React.createElement(Text, {\n    style: styles.level,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 24\n    }\n  }, props.level) : null), renderSenses(), wordIndex === -1 ? React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return addVocabWord();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.addButton, {\n      backgroundColor: COLORS.pastel_green\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"ADD\")) : React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return confirmDelete(wordIndex, props.vocabWord);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.deleteButton, {\n      backgroundColor: COLORS.pastel_red\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"DELETE\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  vocabWord: {\n    fontFamily: \"Roboto-Black\",\n    fontSize: 40,\n    color: \"white\"\n  },\n  level: {\n    fontFamily: \"Roboto-BoldItalic\",\n    fontSize: 30,\n    color: COLORS.pastel_yellow,\n    marginTop: 10,\n    marginRight: 10\n  },\n  translatedWordList: {\n    fontFamily: \"Roboto-Bold\",\n    fontSize: 20,\n    color: \"white\",\n    marginTop: 15\n  },\n  definitionsList: {\n    fontFamily: \"Roboto-Light\",\n    fontSize: 18,\n    color: \"white\",\n    marginBottom: 15\n  },\n  addButton: _objectSpread({\n    alignSelf: \"flex-end\",\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    borderRadius: 25,\n    fontFamily: \"Roboto-Black\",\n    fontSize: 25,\n    color: \"white\",\n    width: 125,\n    height: 75,\n    overflow: \"hidden\"\n  }, Platform.select({\n    ios: {\n      lineHeight: 75\n    },\n    android: {}\n  })),\n  deleteButton: _objectSpread({\n    alignSelf: \"flex-end\",\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    borderRadius: 25,\n    fontFamily: \"Roboto-Black\",\n    fontSize: 25,\n    color: \"white\",\n    width: 150,\n    height: 75,\n    overflow: \"hidden\"\n  }, Platform.select({\n    ios: {\n      lineHeight: 75\n    },\n    android: {}\n  }))\n});\nexport default WordInfoComponent;","map":{"version":3,"sources":["/Users/eliothyenne/Daneo/app/components/WordInfoComponent.js"],"names":["React","useState","COLORS","AsyncStorage","Toast","WordInfoComponent","props","wordIndex","setWordIndex","checkedExists","setCheckedExists","checkWordExists","getItem","currentVocabList","JSON","parse","findIndex","element","vocabWord","confirmDelete","index","Alert","alert","text","onPress","deleteVocabWord","show","duration","durations","SHORT","backgroundColor","shadow","opacity","newVocabList","splice","setItem","stringify","then","console","log","catch","e","addVocabWord","vocabWordToAdd","level","nextReview","Date","now","translatedWordList","definitionsList","push","renderSenses","map","data","key","styles","container","addButton","pastel_green","deleteButton","pastel_red","StyleSheet","create","flexDirection","justifyContent","fontFamily","fontSize","color","pastel_yellow","marginTop","marginRight","marginBottom","alignSelf","textAlign","textAlignVertical","borderRadius","width","height","overflow","Platform","select","ios","lineHeight","android"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Platform, View, Text, TouchableWithoutFeedback, Alert } from \"react-native\";\nimport { COLORS } from \"../config/colors\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Toast from \"react-native-root-toast\";\n\nconst WordInfoComponent = (props) => {\n  const [wordIndex, setWordIndex] = useState(-1);\n  const [checkedExists, setCheckedExists] = useState(false);\n\n  const checkWordExists = async () => {\n    const currentVocabList = await AsyncStorage.getItem(\"@vocabList\");\n\n    if (currentVocabList) {\n      setWordIndex(JSON.parse(currentVocabList).findIndex((element) => element.vocabWord === props.vocabWord));\n    }\n  };\n\n  const confirmDelete = (index, vocabWord) => {\n    Alert.alert(\"Delete\", \"Are you sure you want to delete \" + vocabWord + \" ?\", [\n      { text: \"Yes\", onPress: () => deleteVocabWord(index) },\n      { text: \"No\" },\n    ]);\n  };\n\n  const deleteVocabWord = async (index) => {\n    Toast.show(\"Word deleted\", {\n      duration: Toast.durations.SHORT,\n      backgroundColor: \"gray\",\n      shadow: false,\n      opacity: 0.8,\n    });\n\n    const currentVocabList = await AsyncStorage.getItem(\"@vocabList\");\n\n    const newVocabList = JSON.parse(currentVocabList);\n    newVocabList.splice(index, 1);\n\n    await AsyncStorage.setItem(\"@vocabList\", JSON.stringify(newVocabList))\n      .then(() => {\n        setCheckedExists(false);\n        console.log(\"Word deleted and vocab words list updated.\");\n      })\n      .catch((e) => {\n        console.log(\"There was an error while delete a vocab word from the vocab words list: \", e);\n      });\n  };\n\n  const addVocabWord = async () => {\n    Toast.show(\"Word added\", {\n      duration: Toast.durations.SHORT,\n      backgroundColor: \"gray\",\n      shadow: false,\n      opacity: 0.8,\n    });\n\n    const vocabWordToAdd = {\n      vocabWord: props.vocabWord,\n      level: \"Unseen\",\n      nextReview: Date.now(),\n      translatedWordList: props.translatedWordList,\n      definitionsList: props.definitionsList,\n    };\n\n    const currentVocabList = await AsyncStorage.getItem(\"@vocabList\");\n\n    if (!currentVocabList) {\n      const newVocabList = [];\n      newVocabList.push(vocabWordToAdd);\n      await AsyncStorage.setItem(\"@vocabList\", JSON.stringify(newVocabList))\n        .then(() => {\n          setCheckedExists(false);\n          console.log(\"Vocab words list created and word added.\");\n        })\n        .catch((e) => {\n          console.log(\"There was an error while creating the vocab words list: \", e);\n        });\n    } else {\n      const newVocabList = JSON.parse(currentVocabList);\n      newVocabList.push(vocabWordToAdd);\n      await AsyncStorage.setItem(\"@vocabList\", JSON.stringify(newVocabList))\n        .then(() => {\n          setCheckedExists(false);\n          console.log(\"Word added to vocab words list.\");\n        })\n        .catch((e) => {\n          console.log(\"There was an error while setting the vocab words list: \", e);\n        });\n    }\n  };\n\n  if (!checkedExists) {\n    checkWordExists();\n    setCheckedExists(true);\n  }\n\n  const renderSenses = () => {\n    return props.translatedWordList.map((data, key) => {\n      return (\n        <View key={key}>\n          <Text style={styles.translatedWordList}>\n            {key + 1}. {data}\n          </Text>\n          <Text style={styles.definitionsList}>{props.definitionsList[key]}</Text>\n        </View>\n      );\n    });\n  };\n\n  return (\n    <View>\n      <View style={styles.container}>\n        <Text style={styles.vocabWord}>{props.vocabWord}</Text>\n        {props.level ? <Text style={styles.level}>{props.level}</Text> : null}\n      </View>\n      {renderSenses()}\n      {wordIndex === -1 ? (\n        <TouchableWithoutFeedback onPress={() => addVocabWord()}>\n          <Text style={[styles.addButton, { backgroundColor: COLORS.pastel_green }]}>ADD</Text>\n        </TouchableWithoutFeedback>\n      ) : (\n        <TouchableWithoutFeedback onPress={() => confirmDelete(wordIndex, props.vocabWord)}>\n          <Text style={[styles.deleteButton, { backgroundColor: COLORS.pastel_red }]}>DELETE</Text>\n        </TouchableWithoutFeedback>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  vocabWord: {\n    fontFamily: \"Roboto-Black\",\n    fontSize: 40,\n    color: \"white\",\n  },\n  level: {\n    fontFamily: \"Roboto-BoldItalic\",\n    fontSize: 30,\n    color: COLORS.pastel_yellow,\n    marginTop: 10,\n    marginRight: 10,\n  },\n  translatedWordList: {\n    fontFamily: \"Roboto-Bold\",\n    fontSize: 20,\n    color: \"white\",\n    marginTop: 15,\n  },\n  definitionsList: {\n    fontFamily: \"Roboto-Light\",\n    fontSize: 18,\n    color: \"white\",\n    marginBottom: 15,\n  },\n  addButton: {\n    alignSelf: \"flex-end\",\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    borderRadius: 25,\n    fontFamily: \"Roboto-Black\",\n    fontSize: 25,\n    color: \"white\",\n    width: 125,\n    height: 75,\n    overflow: \"hidden\",\n    ...Platform.select({\n      ios: {\n        lineHeight: 75, // as same as height\n      },\n      android: {},\n    }),\n  },\n  deleteButton: {\n    alignSelf: \"flex-end\",\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    borderRadius: 25,\n    fontFamily: \"Roboto-Black\",\n    fontSize: 25,\n    color: \"white\",\n    width: 150,\n    height: 75,\n    overflow: \"hidden\",\n    ...Platform.select({\n      ios: {\n        lineHeight: 75, // as same as height\n      },\n      android: {},\n    }),\n  },\n});\n\nexport default WordInfoComponent;\n"]},"metadata":{},"sourceType":"module"}